{"version":3,"sources":["components/organisms/NavigationBar/index.js","components/organisms/MiddleContent/index.js","components/templates/TopNavbarMiddleContent/index.js","pages/Home/index.js","pages/About/index.js","pages/Contact/index.js","pages/CoreValues/index.js","routes/index.js","pages/Motivation/index.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","props","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","routesJSX","MiddleContent","Container","contentJSX","TopNavbarMiddleContent","Fragment","data","title","ul","b","text","iframe","subtext","content","bold","ahref","ahrefText","strong","italic","mobile","email","firstName","message","handleChange","event","target","value","encode","replace","LinkToWhatsApp","window","open","Form","onSubmit","preventDefault","stopPropagation","Group","controlId","Label","Control","type","placeholder","onChange","Text","Button","variant","block","subtitle","ahrefLink","routes","path","key","exact","component","displayRouteMenu","Accordion","defaultActiveKey","map","cur","i","Card","Header","as","eventKey","Body","ListGroup","Item","src","Array","isArray","Row","Col","Title","Subtitle","RouteWithSubRoutes","route","render","RenderRoutes","to","singleRoute","App","Boolean","location","hostname","match","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.adf2fe2c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nexport const NavigationBar = (props) => (\r\n<Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"#home\">Jason's CV</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n    {props.routesJSX}\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n);","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport const MiddleContent = (props) => (\r\n  <Container className=\"mt-3\">\r\n    {props.contentJSX}\r\n  </Container>\r\n);","import React from \"react\";\r\nimport { NavigationBar, MiddleContent } from \"../../\";\r\n\r\nexport const TopNavbarMiddleContent = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar routesJSX={props.routesJSX} />\r\n      <MiddleContent contentJSX={props.contentJSX} />\r\n    </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport { TopNavbarMiddleContent } from \"../../components\";\r\nimport { displayRouteMenu, routes } from \"../../routes\";\r\nimport { Accordion, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nconst data = [\r\n  {\r\n    title: \"About this website\",\r\n    ul: [\r\n      \"The purpose of this website is to present Jason's Curriculum Vitae in ReactJS with Atomic Design\",\r\n    ],\r\n  },\r\n  {\r\n    title: {\r\n      b: \"Day 108:\",\r\n      text: \"Calculator in JS (Live Preview)\",\r\n    },\r\n    iframe: \"https://kidfrom.github.io/calculator_js/index.html\",\r\n  },\r\n  {\r\n    title: {\r\n      b: \"Day 108:\",\r\n      text: \"Guest List in JS with Local Storage (Live Preview)\",\r\n    },\r\n    iframe:\r\n      \"https://raw.githack.com/kidfrom/bc_g2_learn_reactjs/offline-storage/learn_offline-storage/index.html\",\r\n  },\r\n  {\r\n    title: {\r\n      b: \"Day 112:\",\r\n      text: \"Express, Firebase, Firestore, ReactJS\",\r\n      subtext: \"(Source Code)\",\r\n    },\r\n    content: [\r\n      {\r\n        bold: \"Day 112:\",\r\n        text: \"HRS Mockup with ReactJS and Local Storage\",\r\n        ahref:\r\n          \"https://github.com/kidfrom/bc_g2_learn_reactjs/tree/hrs-mockup/learn_reactjs\",\r\n        ahrefText: \"(Source Code)\",\r\n      },\r\n      {\r\n        bold: \"Day 117:\",\r\n        text: \"Client-side JWT Authentication with Express\",\r\n        ahref: \"https://github.com/kidfrom/bc_g2_learn_reactjs/tree/jwt\",\r\n        ahrefText: \"(Source Code)\",\r\n      },\r\n      {\r\n        bold: \"Day 118:\",\r\n        text: \"Parking Management System with ReactJS, Firebase & Firestore\",\r\n        ahref:\r\n          \"https://github.com/kidfrom/bc_g2_learn_reactjs/tree/reactjs-firebase/reactjs_firebase\",\r\n        ahrefText: \"(Source Code)\",\r\n      },\r\n      {\r\n        bold: \"Day 123:\",\r\n        text: \"Designing Protected Routes\",\r\n        ahref:\r\n          \"https://github.com/kidfrom/bc_g2_learn_reactjs/tree/reactjs_sdr/reactjs_sdr\",\r\n        ahrefText: \"(Source Code)\",\r\n      },\r\n      {\r\n        bold: \"Day 123:\",\r\n        text:\r\n          \"Curriculum Vitae in ReactJS with Planned Routes and Atomic Design\",\r\n        ahref:\r\n          \"https://github.com/kidfrom/bc_g2_learn_reactjs/tree/reactjs_cv/reactjs_cv\",\r\n        ahrefText: \"(Source Code)\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst contentJSX = (data) => {\r\n  return (\r\n    <Accordion defaultActiveKey=\"0\">\r\n      <React.Fragment>\r\n        {data.map((cur, i) => (\r\n          <Card key={\"\" + cur.title.text}>\r\n            <Card.Header>\r\n              <Accordion.Toggle as={Card.Header} eventKey={\"\" + i}>\r\n                {typeof cur.title === \"object\" ? (\r\n                  <React.Fragment>\r\n                    <b>{cur.title.b}</b> {cur.title.text}{\" \"}\r\n                    <b>{cur.title.subtext}</b>\r\n                  </React.Fragment>\r\n                ) : (\r\n                  cur.title\r\n                )}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={\"\" + i}>\r\n              <Card.Body>\r\n                {cur.ul ? (\r\n                  <ListGroup>\r\n                    {cur.ul.map((cur) => (\r\n                      <ListGroup.Item key={cur}>{cur}</ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                ) : null}\r\n                {cur.iframe ? (\r\n                  <iframe\r\n                    title={cur.title}\r\n                    src={\"\" + cur.iframe}\r\n                    className=\"w-100 vh-100\"\r\n                  />\r\n                ) : null}\r\n                {cur.content ? (\r\n                  <ListGroup>\r\n                    {cur.content.map((cur, i) => (\r\n                      <ListGroup.Item key={cur.bold + i}>\r\n                        <b>{cur.bold}</b> {cur.text}{\" \"}\r\n                        <a href={\"\" + cur.ahref}>{cur.ahrefText}</a>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                ) : null}\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        ))}\r\n      </React.Fragment>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <TopNavbarMiddleContent\r\n      routesJSX={displayRouteMenu(routes)}\r\n      contentJSX={contentJSX(data)}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TopNavbarMiddleContent } from \"../../components/templates\";\r\nimport { displayRouteMenu, routes } from \"../../routes\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst data = [\r\n  {\r\n    title: \"Personal Details\",\r\n    content:\r\n      \"I am a 20 years old student with experience in corporate bookkeeping and financial budgeting. I'm seeking an experience in IT management.\",\r\n  },\r\n  {\r\n    title: \"Professional Summary\",\r\n    content: [\r\n      {\r\n        strong: \"Account Manager\",\r\n        italic: \"Tempat Kerja Indonesia, Incorporated | 2020 - present\",\r\n        ul: [\r\n          {\r\n            text: \"Prepared the incorporation's legal document.\",\r\n          },\r\n          {\r\n            text: \"Built relationship with the suppliers in China.\",\r\n          },\r\n          {\r\n            text: \"Identified potential partner in Indonesia.\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        strong: \"Business Process Improvement Intern\",\r\n        italic: \"Step Point Indonesia, Incorporated | Jan 2018 - Mar 2018\",\r\n        ul: [\r\n          {\r\n            text:\r\n              \"Examined the office politics situations in the HR and Operation dept.\",\r\n          },\r\n          {\r\n            text: \"Examined the workload of the Admin dept.\",\r\n          },\r\n          {\r\n            text:\r\n              \"Prepared the findings report and recommended the preliminary action.\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Skills/Interest\",\r\n    content: [\r\n      {\r\n        ul: [\r\n          {\r\n            text: \"Reading fantasy books.\",\r\n          },\r\n          {\r\n            text: \"Traveling and culinary.\",\r\n          },\r\n          {\r\n            text: \"Know-how to deploy ERP software.\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Education\",\r\n    content: [\r\n      {\r\n        strong: \"Prasetiya Mulya University\",\r\n        italic:\r\n          \"S1 Business Management | 2017 - present, currently in a gap year\",\r\n        ul: [\r\n          {\r\n            text: \"GPA: 3.77\",\r\n          },\r\n          {\r\n            text:\r\n              \"Scholarship winner for the 2018/2019, 2019/2020 academic year.\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Working Experience\",\r\n    content: [\r\n      {\r\n        strong: \"Sales and Quality Control Staff\",\r\n        italic: \"AIESEC in Prasetiya Mulya | Mar 2018 - Mar 2019\",\r\n        ul: [\r\n          {\r\n            text: \"Prepared the guest residence for the iGV participants.\",\r\n          },\r\n          {\r\n            text:\r\n              \"Prepared the iGV participants for the Global Village in Kota Tua.\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        strong: \"Organizing Committee President\",\r\n        italic: \"AIESEC in Prasetiya Mulya | Jun 2018 - Aug 2018\",\r\n        ul: [\r\n          {\r\n            text:\r\n              \"Negotiated the terms for permissions to held Global Village.\",\r\n          },\r\n          {\r\n            text: \"Worked with Polsek Metro Tamansari.\",\r\n          },\r\n          {\r\n            text:\r\n              \"The event was visited by Deputy Governor for Culture and Tourism.\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Reach Me At\",\r\n    content: [\r\n      {\r\n        mobile: \"Mobile: +62 811 8751 555\",\r\n        email: \"jason.onggo@tempatkerja.com\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst contentJSX = (data) => {\r\n  return (\r\n    <Container>\r\n      <p className=\"text-center\">Jason Rich Darmawan Onggo Putra</p>\r\n      <p className=\"text-center\">S1 Business Management</p>\r\n      <div className=\"d-flex flex-wrap\">\r\n        {data.map((cur) => (\r\n          <div className=\"w-50\" key={cur.title}>\r\n            <h5 className=\"text-center\">{cur.title}</h5>\r\n            <br />\r\n            {typeof cur.content === \"string\" ? (\r\n              cur.content\r\n            ) : Array.isArray(cur.content) ? (\r\n              <React.Fragment>\r\n                {cur.content.strong ? (\r\n                  <strong>{cur.content.strong}</strong>\r\n                ) : null}\r\n                {cur.content.italic ? <i>{cur.content.italic}</i> : null}\r\n                {cur.content.map((cur, i) => (\r\n                  <React.Fragment key={\"body\" + cur.strong + i}>\r\n                    {cur.strong ? (\r\n                      <React.Fragment>\r\n                        <strong>{cur.strong}</strong>\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                    {cur.italic ? <i>{cur.italic}</i> : null}\r\n                    {cur.mobile ? <p>{\"Mobile: \" + cur.mobile}</p> : null}\r\n                    {cur.email ? <p>{\"Email: \" + cur.email}</p> : null}\r\n                    <ul>\r\n                      {Array.isArray(cur.ul)\r\n                        ? cur.ul.map((cur) => <li key={cur.text}>{cur.text}</li>)\r\n                        : null}\r\n                    </ul>\r\n                  </React.Fragment>\r\n                ))}\r\n                <br />\r\n              </React.Fragment>\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const About = () => {\r\n  return (\r\n    <TopNavbarMiddleContent\r\n      routesJSX={displayRouteMenu(routes)}\r\n      contentJSX={contentJSX(data)}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TopNavbarMiddleContent } from \"../../components/templates\";\r\nimport { displayRouteMenu, routes } from \"../../routes\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\n\r\nconst contentJSX = () => {\r\n  let target = \"628118751555\";\r\n  let firstName = \"\";\r\n  let message = \"\";\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.id === \"firstName\") firstName = event.target.value;\r\n    if (event.target.id === \"message\") message = event.target.value;\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    LinkToWhatsApp();\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  const encode = (value) => {\r\n    return value.replace(/\\s/g, '%20');\r\n  }\r\n\r\n  const LinkToWhatsApp = () => {\r\n    window.open(`https://wa.me/${target}5?text=My%20name%20is%20${encode(firstName)}.%20${encode(message)}`);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"firstName\">\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Your name\" onChange={handleChange} />\r\n          <Form.Text className=\"text-muted\">\r\n            Please send a shout out with your real name (please, I'd like to call you correctly)\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"message\">\r\n          <Form.Label>Message</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"I have the following questions: \" onChange={handleChange} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" block>\r\n          Send to WhatsApp\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const Contact = () => {\r\n  return (\r\n    <TopNavbarMiddleContent\r\n      routesJSX={displayRouteMenu(routes)}\r\n      contentJSX={contentJSX()}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TopNavbarMiddleContent } from \"../../components/templates\";\r\nimport { displayRouteMenu, routes } from \"../../routes\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nconst data = [\r\n  {\r\n    title: \"Minimum Viable Product\",\r\n    subtitle: \"Focus on testing the MVP, everything else can wait.\",\r\n    text:\r\n      \"In my early days of coding. I tried to create an algorithm to generate a Puzzle in 30ms. It took 4 days to create and test the idea. But after the idea works on paper, it only took 1 hour to refactor the code.\",\r\n    ahrefLink:\r\n      \"https://github.com/kidfrom/sudoku_js/blob/master/dump/white_paper.MD\",\r\n    ahrefText: \"Day 103th of coding\",\r\n  },\r\n  {\r\n    title: \"Documentation\",\r\n    subtitle: \"Learn from the mistakes.\",\r\n    text:\r\n      \"In my early days of coding. I wanted to have my own @jason.com email without paying premium. I built the mail server. After a month, I must relied on notes to maintain the mail server.\",\r\n    ahrefLink: \"https://github.com/kidfrom/docs/blob/master/EMAIL.md\",\r\n    ahrefText: \"Day 24th of coding\",\r\n  },\r\n];\r\n\r\nconst contentJSX = (data) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {data.map((cur) => (\r\n          <Col key={cur.ahrefText}>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>{cur.title}</Card.Title>\r\n                <Card.Subtitle>{cur.subtitle}</Card.Subtitle>\r\n                <Card.Text>{cur.text}</Card.Text>\r\n                <a href={\"\" + cur.ahrefLink}>{cur.ahrefText}</a>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const CoreValues = () => {\r\n  return (\r\n    <TopNavbarMiddleContent\r\n      routesJSX={displayRouteMenu(routes)}\r\n      contentJSX={contentJSX(data)}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Home, About, Contact, Motivation, CoreValues } from \"../pages\";\r\n\r\nexport const routes = [\r\n  { path: \"/\", key: \"Home\", exact: true, component: Home },\r\n  { path: \"/about\", key: \"About\", exact: true, component: About },\r\n  {\r\n    path: \"/contact\",\r\n    key: \"Contact\",\r\n    exact: true,\r\n    component: Contact,\r\n  },\r\n  {\r\n    path: \"/motivation\",\r\n    key: \"Motivation Letter\",\r\n    exact: true,\r\n    component: Motivation,\r\n  },\r\n  {\r\n    path: \"/corevalues\",\r\n    key: \"IT Core Values\",\r\n    exact: true,\r\n    component: CoreValues,\r\n  },\r\n];\r\n\r\nconst RouteWithSubRoutes = (route) => (\r\n  <Route\r\n    path={route.path}\r\n    exact={route.exact}\r\n    render={(props) => <route.component {...props} routes={route.routes} />}\r\n  />\r\n);\r\n\r\nexport function RenderRoutes({ routes }) {\r\n  return (\r\n    <Switch>\r\n      {routes.map((route) => {\r\n        return <RouteWithSubRoutes key={route.key} {...route} />;\r\n      })}\r\n      <Route component={() => <h1>Not Found!</h1>} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport const displayRouteMenu = (routes) => {\r\n  const singleRoute = (route) => (\r\n    <Link to={route.path} className=\"nav-link\" key={route.key}>\r\n      {route.key}\r\n    </Link>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {routes.map((route) =>\r\n        route.routes ? (\r\n          <React.Fragment key={route.key}>\r\n            {displayRouteMenu(route.routes)}\r\n          </React.Fragment>\r\n        ) : (\r\n          singleRoute(route)\r\n        )\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TopNavbarMiddleContent } from \"../../components/templates\";\r\nimport { displayRouteMenu, routes } from \"../../routes\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst contentJSX = () => {\r\n  return (\r\n    <Container>\r\n      <blockquote className=\"blockquote text-justify\">\r\n        <p>\r\n          At the age of 20, this year, marked my appreciation for hard work and\r\n          the value of continuous improvement. I realized that I should not\r\n          quickly satisfied and I should always improve my skills.\r\n        </p>\r\n        <p>\r\n          I witnessed the impact of technology in China. Technology contributes\r\n          to almost every aspect of poverty allevation program in China. From\r\n          the economic policy to education policy.\r\n        </p>\r\n        <p className=\"mb-0\">\r\n          Through technology, I believe I can maximize my impact while also\r\n          creating wealth.\r\n        </p>\r\n        <footer className=\"blockquote-footer\">\r\n          Jason <cite title=\"Source Title\">from Indonesia</cite>\r\n        </footer>\r\n        <br />\r\n        <p className=\"mb-0\">\r\n          Nothing is free. Nothing is easy. If you want to be successful, you\r\n          have to pay the price.\r\n        </p>\r\n        <footer className=\"blockquote-footer\">\r\n          Jack Ma <cite title=\"Source Title\">, Alibaba Group</cite>\r\n        </footer>\r\n      </blockquote>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const Motivation = () => {\r\n  return (\r\n    <TopNavbarMiddleContent\r\n      routesJSX={displayRouteMenu(routes)}\r\n      contentJSX={contentJSX()}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\nimport { routes, RenderRoutes } from \"./routes\";\n\nconst App = () => (\n  <React.Fragment>\n    <RenderRoutes routes={routes} />\n  </React.Fragment>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename='/'>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}